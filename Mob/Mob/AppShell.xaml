<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:Mob.Views"
       Title="Mob"
       x:Class="Mob.AppShell"
       >

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    {StaticResource Primary}
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <!--Gradient Brush-->
            <LinearGradientBrush
                x:Key="GradientBrush"
                StartPoint="0,0"
                EndPoint="1,1">
                <GradientStop Color="{AppThemeBinding 
                              Light={StaticResource DarkGold2},
                              Dark={StaticResource LightGold2}}" 
                              Offset="0.65"/>
                <GradientStop Color="{AppThemeBinding 
                              Light={StaticResource StdWhite}, 
                              Dark={StaticResource LightGrey2}}" 
                              Offset="0.45"/>
                <GradientStop Color="{AppThemeBinding 
                              Light={StaticResource LightGrey1}, 
                              Dark={StaticResource StdSlate}}" 
                              Offset="0.35"/>
            </LinearGradientBrush>
            <!-- ↓ Foundational Style ↓-->
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.ForegroundColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.TitleColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.DisabledColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.UnselectedColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.TabBarBackgroundColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.TabBarForegroundColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
                <Setter Property="Shell.TabBarUnselectedColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}"/>
                <Setter Property="Shell.TabBarTitleColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}"/>
                <Setter Property="Shell.BackgroundColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}"/>
            </Style>
            <!--↓ Global Styles by Component ↓-->
            <!--↓ App Theme Switch Snippet ↓-->
            <!--{AppThemeBinding Light={StaticResource [AssetColor]}, Dark={StaticResource [AssetColor]}}-->
            <Style TargetType="ContentPage">
                <Setter Property="BackgroundColor"
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
            </Style>
            <Style TargetType="Grid">
                <Setter Property="BackgroundColor"
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
            </Style>
            <Style TargetType="StackLayout">
                <Setter Property="BackgroundColor"
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
            </Style>
            <Style TargetType="ListView">
                <Setter Property="BackgroundColor"
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
            </Style>
            <!--↓ Drop Shadow ↓-->
            <Style TargetType="Frame">
                <Setter Property="Background"
                        Value="{StaticResource GradientBrush}"/>
                <Setter Property="HasShadow"
                        Value="False"/>
                <Setter Property="Margin"
                        Value="25,10,25,10"/>
                <Setter Property="Padding"
                        Value="2"/>
                <Setter Property="CornerRadius"
                        Value="7"/>
            </Style>
            <Style TargetType="ScrollView">
                <Setter Property="BackgroundColor"
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
            </Style>
            <Style TargetType="BoxView">
                <Setter Property="BackgroundColor"
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}" />
            </Style>
            <Style TargetType="TabBar" 
                   BasedOn="{StaticResource BaseStyle}"/>
            <Style TargetType="FlyoutPage" 
                   BasedOn="{StaticResource BaseStyle}"/>
            <Style Class="FlyoutItemLayoutStyle" 
                   TargetType="Layout" 
                   ApplyToDerivedTypes="True">
                <Setter Property="BackgroundColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdGrey2}, 
                        Dark={StaticResource StdSlate}}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <!-- This color changes the background of buttons in the tab menu-->
                                    <Setter Property="BackgroundColor" 
                                            Value="{AppThemeBinding 
                                            Light={StaticResource StdGrey2}, 
                                            Dark={StaticResource StdSlate}}" />
                                    <!--This color changes the background of the text in the tab menu-->
                                    <Setter TargetName="FlyoutItemLabel" 
                                            Property="Label.TextColor" 
                                            Value="red" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <!-- This color changes the background of buttons that is selected in the tab menu-->
                                    <Setter Property="BackgroundColor" 
                                            Value="#b3b3b3" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" 
                   TargetType="Layout" 
                   ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <!-- This color changes the background of the Logout text button in the tab menu-->
                                    <Setter TargetName="FlyoutItemLabel" 
                                            Property="Label.TextColor" 
                                            Value="black" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <!--                               ↓↓ THE DAMN BUTTON IS RIGHT HEREEEEEEE -->
            <Style TargetType="Button">
                <Setter Property="TextColor" 
                        Value="{AppThemeBinding 
                        Light={StaticResource StdSlate}, 
                        Dark={StaticResource DarkWhite}}" />
                <Setter Property="FontFamily" 
                        Value="ProstoOne"/>
                <Setter Property="CornerRadius"
                        Value="7"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" 
                                            Value="{AppThemeBinding 
                                            Light={StaticResource StdGrey2},
                                            Dark={StaticResource StdSlate}}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" 
                                Value="{StaticResource StdGrey1}"  />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    
    
    <ShellContent Title="HomePage" Icon="MOB_Logo_2021_Test3.png" Route="HomePage" ContentTemplate="{DataTemplate local:HomePage}" />
    <ShellContent Title="Daily Dose" Icon="MOB_Logo_2021_Test3.png" Route="DailyDosePage" ContentTemplate="{DataTemplate local:DailyDosePage}" />
    <ShellContent Title="3min Mōb" Icon="MOB_Logo_2021_Test3.png" Route="ThreeMinMobPage" ContentTemplate="{DataTemplate local:ThreeMinMobPage}" />
    <ShellContent Title="My Mōb" Icon="MOB_Logo_2021_Test3.png" Route="MyMobPage" ContentTemplate="{DataTemplate local:MyMobPage}" />
    <FlyoutItem Title="MyMobContent" Icon="icon_about.png" Route="MyMobContent" FlyoutDisplayOptions="AsMultipleItems">
        <ShellContent Title="Mōb Playlist" Icon="MOB_Logo_2021_Test3.png" Route="MobPlaylistPage" ContentTemplate="{DataTemplate local:MobPlaylistPage}" />
        <ShellContent Title="Mōb Marketplace" Icon="MOB_Logo_2021_Test3.png" Route="MobMarketPage" ContentTemplate="{DataTemplate local:MobMarketPage}" />
    </FlyoutItem>
    <ShellContent Title="Settings" Icon="MOB_Logo_2021_Test3.png" Route="SettingsPage" ContentTemplate="{DataTemplate local:SettingsPage}" />
    <FlyoutItem Title="SettingsContent" Icon="icon_about.png" Route="SettingsContent" FlyoutDisplayOptions="AsMultipleItems">
        <ShellContent Title="Application" Icon="MOB_Logo_2021_Test3.png" Route="ApplicationPage" ContentTemplate="{DataTemplate local:ApplicationPage}" />
        <ShellContent Title="Profile" Icon="MOB_Logo_2021_Test3.png" Route="ProfilePage" ContentTemplate="{DataTemplate local:ProfilePage}" />
        <ShellContent Title="Billing" Icon="MOB_Logo_2021_Test3.png" Route="BillingPage" ContentTemplate="{DataTemplate local:BillingPage}" />
        <ShellContent Title="Premium" Icon="MOB_Logo_2021_Test3.png" Route="PremiumPage" ContentTemplate="{DataTemplate local:PremiumPage}" />
    </FlyoutItem>
-->

    
    
    <!-- While I have set stuff here, I don't quite understand what it's doing. Changing stuff doesn't give me the expected results. 
    As of writing this comment (5/25/2021), navigation is working as intended so I'm just ignoring this for now.
    This is the content that populates the FlyoutDisplay,TabBar,Tabs. 
    Adding a ShellContent into the outer TabBar makes an entry into the FlyoutDisplay or TabBar. 
    Adding multiple ShellContents inside a single Tab causes those to become tabs.
    -->
    <FlyoutItem>
        <ShellContent Title="Home" 
                      Icon="MOB_Logo_2021_Test3.png" 
                      Route="HomePage" 
                      ContentTemplate="{DataTemplate local:HomePage}" />
        <ShellContent Title="What is Mob?" 
                      Icon="MOB_Logo_2021_Test3.png" 
                      Route="AboutPage" 
                      ContentTemplate="{DataTemplate local:AboutPage}" />
        <Tab Title="Routines" 
             Icon="MOB_Logo_2021_Test3.png" 
             Route="RoutinesPage">
            <ShellContent Title="1min Check In" 
                          Icon="MOB_Logo_2021_Test3.png" 
                          Route="CheckInPage" 
                          ContentTemplate="{DataTemplate local:CheckInPage}" />
            <ShellContent Title="3min Mob" 
                          Icon="MOB_Logo_2021_Test3.png" 
                          Route="ThreeMinMobPage" 
                          ContentTemplate="{DataTemplate local:ThreeMinMobPage}" />
            <ShellContent Title="10min Daily Dose" 
                          Icon="MOB_Logo_2021_Test3.png" 
                          Route="DailyDosePage" 
                          ContentTemplate="{DataTemplate local:DailyDosePage}" />
        </Tab>
        <Tab Title="Mob Library" 
             Icon="MOB_Logo_2021_Test3.png" 
             Route="MobLibraryPage">
            <ShellContent Title="Singles" 
                          Icon="MOB_Logo_2021_Test3.png" 
                          Route="SinglesPage" 
                          ContentTemplate="{DataTemplate local:SinglesPage}" />
        </Tab>
        <ShellContent Title="Settings" 
                      Icon="MOB_Logo_2021_Test3.png" 
                      Route="SettingsPage" 
                      ContentTemplate="{DataTemplate local:SettingsPage}" />
    </FlyoutItem>
    
    

    
   

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>
    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
